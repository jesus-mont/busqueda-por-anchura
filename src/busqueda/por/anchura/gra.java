/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package busqueda.por.anchura;

import java.awt.Image;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author chuy_
 */
public class gra extends javax.swing.JFrame {

    /**
     * Creates new form gra
     */
    public gra() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblJarra3 = new javax.swing.JLabel();
        lblJarra4 = new javax.swing.JLabel();
        btnResolver = new javax.swing.JButton();
        txtJarra4 = new javax.swing.JTextField();
        txtJarra3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnResolver.setText("Resolver");
        btnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolverActionPerformed(evt);
            }
        });

        txtJarra4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJarra4ActionPerformed(evt);
            }
        });

        txtJarra3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJarra3ActionPerformed(evt);
            }
        });

        jLabel1.setText("cantidad en jarra 3:");

        jLabel2.setText("Cantidad en jarra4:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblJarra3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtJarra3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJarra4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResolver)
                .addContainerGap(265, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(lblJarra4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(287, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtJarra3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtJarra4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnResolver)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(lblJarra3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(108, Short.MAX_VALUE)
                    .addComponent(lblJarra4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(21, 21, 21)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtJarra4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJarra4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJarra4ActionPerformed

    private void txtJarra3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJarra3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJarra3ActionPerformed

    private void btnResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolverActionPerformed
        // TODO add your handling code here:
        //obtenemos el cantidad que va a tener cada jarra de las cajas de texto y las guardamos en una variables
        jarra4=Integer.parseInt(txtJarra4.getText());
        jarra3=Integer.parseInt(txtJarra3.getText());
        //inicializamos el primer punto de la lista con los valores que ingreso el usuario
       lista.add(new Point(jarra4, jarra3));
       //iniciaizamos el punto auxiliar con el primer punto de la lista
        aux=lista.get(indice);
        //metodo que resuleve el acertijo
        resolver();
            
         //ciclo que recorre la lista para imprimirla en consola   
        for(int i=0; i<lista.size(); i++ ){
            System.out.println(lista.get(i));}
  
    }//GEN-LAST:event_btnResolverActionPerformed

    /**
     * @param args the command line arguments
     */
    //inicializacion de variables globales
     public static int jarra3 = 0, jarra4 = 0, indice=0;
    public static ArrayList<Point> lista = new ArrayList();
      public static  Point aux;
     public static Icon icono, icono2;
     
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gra().setVisible(true);
            }
        });
    }
    
    public static void resolver(){
        //metodo que ejecuta las reglas mientras la jarra 4 no sea 2
    while(aux.x !=2){
        //metod o que llena la jarra 4
       jarra4=llenar4();
       /*metodo que checa el punto obtenido en base al cambio del metodo anterior checa 
       que ese punto no este en la lista y lo agreaga*/
       checarlista();
       //metodo que checa qie el ultimo punto de la lista no sea 2, en caso de serlo termina el ciclo
       //con esto evitamos que continuen los otros metodos despues de haber llegado al resultado
       if(checar2()){
           break;}
       //se reinicializan las variables al punto auxiliar ya que estaban en un hijo de este
       //esto se requiere ya que es una busqueda por anchura
       jarra4=(int) aux.getX();
       jarra3=(int) aux.getY();
       //metodo que llena la jarra 3
        jarra3=llenar3();
         checarlista();
         if(checar2()){
           break;}
         jarra4=(int) aux.getX();
       jarra3=(int) aux.getY();
       //metodo que vacia la jarra 4
       jarra4=vaciar4();
        checarlista();
        if(checar2()){
           break;}
        jarra4=(int) aux.getX();
       jarra3=(int) aux.getY();
       //metodo  que vacia la jarra 3
       jarra3=vaciar3();
        checarlista();   
        if(checar2()){
           break;}
        jarra4=(int) aux.getX();
       jarra3=(int) aux.getY();
       //metodo que vierte la jarra 4 en la jarra 3
       verter4en3(jarra3, jarra4);
        checarlista();
        if(checar2()){
           break;}
         jarra4=(int) aux.getX();
       jarra3=(int) aux.getY();
       //metodo que vierte la jarra 3 en la jarra 4
        verter3en4(jarra3, jarra4);
        checarlista();
        if(checar2()){
           break;}
        //el indice nos ayuda a recorrer la lista
        indice++;
        //el auxiliar cambia al sigueinte nodo de la lista
        //a este punto ya tenemos en la lista a todos los nodos del auxiliar/ el punto que estabamos evaluando
        aux=lista.get(indice);
        }
        
        
       
    }
    public static boolean checar2(){
       //booleano que checa si el ultimo punto en x de la lista es 2 para terminar el ciclo 
     Point x=lista.get(lista.size()-1);
         if(x.x==2){
         return true;}else{
          return false;   
         }
     }
     
    
     public static void checarlista(){
         //boolenao que ayuda para saber si el punto que obtuvimos despues de ejecutar una de las reglas esta o no en la lista
         boolean bandera=true;
        for (int i = 0; i < lista.size(); i++) { 
           
            if(jarra4==lista.get(i).x && jarra3 ==lista.get(i).y){
                //en caso de que este sale del ciclo 
                bandera=false; break;
                }else{ 
                //en caso de que no la bandera indica que no esta en la lista
                        bandera=true;
               
            }
            
        }
        //checamos de que la bandera sea verdadera y precedemos a aderir el punto a la lista
         if(bandera){
         lista.add(new Point(jarra4,jarra3));
         }  
        

     }
    public static int llenar4(){
    int j4= 4;
        return j4;
    }
    public static int llenar3(){
     jarra3=3;
    return jarra3;}
    
    public static void verter3en4( int j3, int j4){
        //se suma la cantidad de ambas jarras
        int aux = j3+j4;
        if (aux>4){//si la mayor al contenido maximo de la jarra a eevaluar esta se llena 
         jarra4=4;
         //y el resto se queda en la otra jarra
         jarra3= aux-4;}
        else{// de lo contrario toda el agua se queda en la jarra a evaluar
        jarra4= aux;
        jarra3=0;}
    } 
     public static void verter4en3(int j3, int j4){
         //se suma la cantidad de ambas jarras
        int aux = j3+j4;
        if (aux>3){//si la mayor al contenido maximo de la jarra a eevaluar esta se llena 
         //y el resto se queda en la otra jarra
            jarra4=aux-3;
         jarra3= 3;}
        else{
            // de lo contrario toda el agua se queda en la jarra a evaluar
        jarra4= 0;
        jarra3=aux;}
    } 
         public static int vaciar4() {
        int j4 = 0;
        return j4;
    }

    public static int vaciar3() {
        int j3 = 0;
        return j3;
    }

    

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblJarra3;
    private javax.swing.JLabel lblJarra4;
    public javax.swing.JTextField txtJarra3;
    private javax.swing.JTextField txtJarra4;
    // End of variables declaration//GEN-END:variables
}
